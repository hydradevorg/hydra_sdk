# FindWasmDeps.cmake
# Find all WebAssembly-compiled dependencies for Hydra SDK
#
# This module defines
#  WASM_DEPS_FOUND        - True if all dependencies were found
#  WASM_DEPS_INCLUDE_DIRS - The include directories
#  WASM_DEPS_LIBRARIES    - The libraries

# Find GMP
include(${CMAKE_CURRENT_LIST_DIR}/FindGMP_WASM.cmake)

# Find OpenSSL
include(${CMAKE_CURRENT_LIST_DIR}/FindOpenSSL_WASM.cmake)

# Find Botan
include(${CMAKE_CURRENT_LIST_DIR}/FindBotan_WASM.cmake)

# Find Blake3
include(${CMAKE_CURRENT_LIST_DIR}/FindBlake3_WASM.cmake)

# Find Eigen3
include(${CMAKE_CURRENT_LIST_DIR}/FindEigen3_WASM.cmake)

# Find JSON

# Find Falcon
include(${CMAKE_CURRENT_LIST_DIR}/FindFalcon_WASM.cmake)
include(${CMAKE_CURRENT_LIST_DIR}/FindJSON_WASM.cmake)

# Check if all dependencies were found
if(GMP_WASM_FOUND AND OPENSSL_WASM_FOUND AND BOTAN_WASM_FOUND AND BLAKE3_WASM_FOUND AND EIGEN3_WASM_FOUND AND JSON_WASM_FOUND AND FALCON_WASM_FOUND)
  set(WASM_DEPS_FOUND TRUE)

  # Combine include directories
  set(WASM_DEPS_INCLUDE_DIRS
    ${GMP_WASM_INCLUDE_DIRS}
    ${OPENSSL_WASM_INCLUDE_DIRS}
    ${BOTAN_WASM_INCLUDE_DIRS}
    ${BLAKE3_WASM_INCLUDE_DIRS}
    ${EIGEN3_WASM_INCLUDE_DIRS}
    ${JSON_WASM_INCLUDE_DIRS}
    ${FALCON_WASM_INCLUDE_DIRS}
  )

  # Combine libraries
  set(WASM_DEPS_LIBRARIES
    ${GMP_WASM_LIBRARIES}
    ${OPENSSL_WASM_LIBRARIES}
    ${BOTAN_WASM_LIBRARIES}
    ${BLAKE3_WASM_LIBRARIES}
  )
else()
  set(WASM_DEPS_FOUND FALSE)
endif()

# Report status
if(WASM_DEPS_FOUND)
  message(STATUS "Found all WebAssembly dependencies")
else()
  message(WARNING "Some WebAssembly dependencies were not found")
endif()
